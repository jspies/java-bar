{
  "name": "monglow",
  "version": "0.0.1",
  "description": "another ODM for MongoDB",
  "keywords": [
    "mongo",
    "mongodb"
  ],
  "author": {
    "name": "Jonathan Spies",
    "email": "jonathan.spies@gmail.com"
  },
  "dependencies": {
    "mongolian": "*",
    "klass": "*"
  },
  "devDependencies": {
    "should": "*"
  },
  "main": "monglow",
  "engines": {
    "node": ">= 0.4.x"
  },
  "readme": "Monglow\n-----------\n\nA MongoDB ODM for Node.js. Monglow focuses on dead simple model declaration, allowing a schema less definition, and providing easy relationships.\n\nI couldn't find one that did these things, so here I am.\n\nInit\n-------------\n```javascript\nvar Monglow = require(\"monglow\")\nMonglow.connect(\"mongo://localhost/monglow\") // leaving blank results in localhost/monglow_test\n```\n\nI recommend doing the connect in an initializer so you only have to call it once.\n\nA Model\n-------------\n```javascript\nvar Post = Monglow.model('posts');\n```\n\nDone. Seriously. But you can do more if you want.\n\nLike add a static finder.\n\n```javascript\nPost.find_by_custom_stuff = function(callback) {\n  this.find({stuff: \"custom\"}, callback);\n}\n```\n\nThen you can use the model.\n\n```javascript\nvar post = Post.new({name: \"Jonathan\"});\npost.save();\npost.remove();\nPost.create({name: \"not Jonathan\"});\n\nPost.find(function(err, posts) {\n  // do stuff with posts\n  posts[0].name = \"Spies\";\n  posts[0].save();\n\n  posts[0].save({name: \"not Spies\"});\n});\n```\n\nRelationships\n-------------\n```javascript\nvar Author = Monglow.model(\"authors\");\n\nPost.references_many('authors');\n```",
  "readmeFilename": "readme.md",
  "_id": "monglow@0.0.1",
  "dist": {
    "shasum": "6b435de94eaf339480c1479655c42051e58bf6fa"
  },
  "_resolved": "git://github.com/jspies/monglow.git#47662e58e499ef86accc97f21a5d6d7186046c96",
  "_from": "monglow@git://github.com/jspies/monglow.git"
}
